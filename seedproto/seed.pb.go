// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: seedproto/seed.proto

package seedproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GeyserProto struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	X              int32                  `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y              int32                  `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	ActiveCycles   float64                `protobuf:"fixed64,4,opt,name=activeCycles,proto3" json:"activeCycles,omitempty"`
	AvgEmitRate    float64                `protobuf:"fixed64,5,opt,name=avgEmitRate,proto3" json:"avgEmitRate,omitempty"`
	DormancyCycles float64                `protobuf:"fixed64,6,opt,name=dormancyCycles,proto3" json:"dormancyCycles,omitempty"`
	EmitRate       float64                `protobuf:"fixed64,7,opt,name=emitRate,proto3" json:"emitRate,omitempty"`
	EruptionTime   float64                `protobuf:"fixed64,8,opt,name=eruptionTime,proto3" json:"eruptionTime,omitempty"`
	IdleTime       float64                `protobuf:"fixed64,9,opt,name=idleTime,proto3" json:"idleTime,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GeyserProto) Reset() {
	*x = GeyserProto{}
	mi := &file_seedproto_seed_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeyserProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeyserProto) ProtoMessage() {}

func (x *GeyserProto) ProtoReflect() protoreflect.Message {
	mi := &file_seedproto_seed_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeyserProto.ProtoReflect.Descriptor instead.
func (*GeyserProto) Descriptor() ([]byte, []int) {
	return file_seedproto_seed_proto_rawDescGZIP(), []int{0}
}

func (x *GeyserProto) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GeyserProto) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *GeyserProto) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *GeyserProto) GetActiveCycles() float64 {
	if x != nil {
		return x.ActiveCycles
	}
	return 0
}

func (x *GeyserProto) GetAvgEmitRate() float64 {
	if x != nil {
		return x.AvgEmitRate
	}
	return 0
}

func (x *GeyserProto) GetDormancyCycles() float64 {
	if x != nil {
		return x.DormancyCycles
	}
	return 0
}

func (x *GeyserProto) GetEmitRate() float64 {
	if x != nil {
		return x.EmitRate
	}
	return 0
}

func (x *GeyserProto) GetEruptionTime() float64 {
	if x != nil {
		return x.EruptionTime
	}
	return 0
}

func (x *GeyserProto) GetIdleTime() float64 {
	if x != nil {
		return x.IdleTime
	}
	return 0
}

type PointOfInterestProto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	X             int32                  `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y             int32                  `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PointOfInterestProto) Reset() {
	*x = PointOfInterestProto{}
	mi := &file_seedproto_seed_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PointOfInterestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointOfInterestProto) ProtoMessage() {}

func (x *PointOfInterestProto) ProtoReflect() protoreflect.Message {
	mi := &file_seedproto_seed_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointOfInterestProto.ProtoReflect.Descriptor instead.
func (*PointOfInterestProto) Descriptor() ([]byte, []int) {
	return file_seedproto_seed_proto_rawDescGZIP(), []int{1}
}

func (x *PointOfInterestProto) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PointOfInterestProto) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *PointOfInterestProto) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type AsteroidProto struct {
	state            protoimpl.MessageState  `protogen:"open.v1"`
	Id               string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SizeX            int32                   `protobuf:"varint,2,opt,name=sizeX,proto3" json:"sizeX,omitempty"`
	SizeY            int32                   `protobuf:"varint,3,opt,name=sizeY,proto3" json:"sizeY,omitempty"`
	Geysers          []*GeyserProto          `protobuf:"bytes,4,rep,name=geysers,proto3" json:"geysers,omitempty"`
	PointsOfInterest []*PointOfInterestProto `protobuf:"bytes,5,rep,name=pointsOfInterest,proto3" json:"pointsOfInterest,omitempty"`
	BiomePaths       string                  `protobuf:"bytes,6,opt,name=biomePaths,proto3" json:"biomePaths,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AsteroidProto) Reset() {
	*x = AsteroidProto{}
	mi := &file_seedproto_seed_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AsteroidProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsteroidProto) ProtoMessage() {}

func (x *AsteroidProto) ProtoReflect() protoreflect.Message {
	mi := &file_seedproto_seed_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsteroidProto.ProtoReflect.Descriptor instead.
func (*AsteroidProto) Descriptor() ([]byte, []int) {
	return file_seedproto_seed_proto_rawDescGZIP(), []int{2}
}

func (x *AsteroidProto) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AsteroidProto) GetSizeX() int32 {
	if x != nil {
		return x.SizeX
	}
	return 0
}

func (x *AsteroidProto) GetSizeY() int32 {
	if x != nil {
		return x.SizeY
	}
	return 0
}

func (x *AsteroidProto) GetGeysers() []*GeyserProto {
	if x != nil {
		return x.Geysers
	}
	return nil
}

func (x *AsteroidProto) GetPointsOfInterest() []*PointOfInterestProto {
	if x != nil {
		return x.PointsOfInterest
	}
	return nil
}

func (x *AsteroidProto) GetBiomePaths() string {
	if x != nil {
		return x.BiomePaths
	}
	return ""
}

type SeedDataProto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Asteroids     []*AsteroidProto       `protobuf:"bytes,1,rep,name=asteroids,proto3" json:"asteroids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeedDataProto) Reset() {
	*x = SeedDataProto{}
	mi := &file_seedproto_seed_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeedDataProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeedDataProto) ProtoMessage() {}

func (x *SeedDataProto) ProtoReflect() protoreflect.Message {
	mi := &file_seedproto_seed_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeedDataProto.ProtoReflect.Descriptor instead.
func (*SeedDataProto) Descriptor() ([]byte, []int) {
	return file_seedproto_seed_proto_rawDescGZIP(), []int{3}
}

func (x *SeedDataProto) GetAsteroids() []*AsteroidProto {
	if x != nil {
		return x.Asteroids
	}
	return nil
}

var File_seedproto_seed_proto protoreflect.FileDescriptor

const file_seedproto_seed_proto_rawDesc = "" +
	"\n" +
	"\x14seedproto/seed.proto\x12\tseedproto\"\x83\x02\n" +
	"\vGeyserProto\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\f\n" +
	"\x01x\x18\x02 \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\x05R\x01y\x12\"\n" +
	"\factiveCycles\x18\x04 \x01(\x01R\factiveCycles\x12 \n" +
	"\vavgEmitRate\x18\x05 \x01(\x01R\vavgEmitRate\x12&\n" +
	"\x0edormancyCycles\x18\x06 \x01(\x01R\x0edormancyCycles\x12\x1a\n" +
	"\bemitRate\x18\a \x01(\x01R\bemitRate\x12\"\n" +
	"\feruptionTime\x18\b \x01(\x01R\feruptionTime\x12\x1a\n" +
	"\bidleTime\x18\t \x01(\x01R\bidleTime\"B\n" +
	"\x14PointOfInterestProto\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\f\n" +
	"\x01x\x18\x02 \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\x05R\x01y\"\xea\x01\n" +
	"\rAsteroidProto\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05sizeX\x18\x02 \x01(\x05R\x05sizeX\x12\x14\n" +
	"\x05sizeY\x18\x03 \x01(\x05R\x05sizeY\x120\n" +
	"\ageysers\x18\x04 \x03(\v2\x16.seedproto.GeyserProtoR\ageysers\x12K\n" +
	"\x10pointsOfInterest\x18\x05 \x03(\v2\x1f.seedproto.PointOfInterestProtoR\x10pointsOfInterest\x12\x1e\n" +
	"\n" +
	"biomePaths\x18\x06 \x01(\tR\n" +
	"biomePaths\"G\n" +
	"\rSeedDataProto\x126\n" +
	"\tasteroids\x18\x01 \x03(\v2\x18.seedproto.AsteroidProtoR\tasteroidsB\x14Z\x12oni-view/seedprotob\x06proto3"

var (
	file_seedproto_seed_proto_rawDescOnce sync.Once
	file_seedproto_seed_proto_rawDescData []byte
)

func file_seedproto_seed_proto_rawDescGZIP() []byte {
	file_seedproto_seed_proto_rawDescOnce.Do(func() {
		file_seedproto_seed_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_seedproto_seed_proto_rawDesc), len(file_seedproto_seed_proto_rawDesc)))
	})
	return file_seedproto_seed_proto_rawDescData
}

var file_seedproto_seed_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_seedproto_seed_proto_goTypes = []any{
	(*GeyserProto)(nil),          // 0: seedproto.GeyserProto
	(*PointOfInterestProto)(nil), // 1: seedproto.PointOfInterestProto
	(*AsteroidProto)(nil),        // 2: seedproto.AsteroidProto
	(*SeedDataProto)(nil),        // 3: seedproto.SeedDataProto
}
var file_seedproto_seed_proto_depIdxs = []int32{
	0, // 0: seedproto.AsteroidProto.geysers:type_name -> seedproto.GeyserProto
	1, // 1: seedproto.AsteroidProto.pointsOfInterest:type_name -> seedproto.PointOfInterestProto
	2, // 2: seedproto.SeedDataProto.asteroids:type_name -> seedproto.AsteroidProto
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_seedproto_seed_proto_init() }
func file_seedproto_seed_proto_init() {
	if File_seedproto_seed_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_seedproto_seed_proto_rawDesc), len(file_seedproto_seed_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_seedproto_seed_proto_goTypes,
		DependencyIndexes: file_seedproto_seed_proto_depIdxs,
		MessageInfos:      file_seedproto_seed_proto_msgTypes,
	}.Build()
	File_seedproto_seed_proto = out.File
	file_seedproto_seed_proto_goTypes = nil
	file_seedproto_seed_proto_depIdxs = nil
}
